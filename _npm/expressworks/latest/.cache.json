{"name":"expressworks","version":"0.0.13","description":"Express.js workshop based on workshopper and inspired by stream-adventure by @substack and @maxogden.","main":"expressworks.js","author":{"name":"Azat Mardanov","url":"@azat_co"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/azat-co/expressworks"},"keywords":["express.js","node.js","javascript","nodeschool.io"],"license":"BSD-2-Clause","bugs":{"url":"https://github.com/azat-co/expressworks/issues"},"bin":{"expressworks":"./expressworks.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.3.3","express":"~3.4.3","superagent":"~0.15.7","jade":"~0.35.0","stylus":"~0.38.0"},"readme":"expressworks\n============\n\nExpress.js workshop based on [workshopper](https://github.com/rvagg/workshopper) and inspired by [stream-adventure](https://github.com/substack/stream-adventure) by [@substack](https://twitter.com/substack) and [@maxogden](https://twitter.com/maxogden).\n\n![Hello World Express.js app](https://raw.github.com/azat-co/expressworks/master/images/hello-world.png)\n\n## Contributors\n\n     38  Azat Mardanov\n     3  Charlotte Spencer\n     1  Wojciech Gawronski\n\nPS: via `git shortlog -n -s`\n\n## Installation (recommended)\n\nRecommended global installation:\n\n```bash\n$ npm install -g expressworks\n$ expressworks\n```\n\n\nIf you see errors, try:\n\n```bash\n$ sudo npm install -g expressworks\n```\n\n## Local Installation (advanced)\n\nRun&install locally:\n\n```bash\n$ npm install expressworks\n$ cd expressworks\n$ npm install\n$ node expressworks\n```\n\n# Usage\n\nExpressWorks understands these commands:\n\n```\nUsage\n\n  expressworks\n    Show a menu to interactively select a workshop.\n  expressworks list\n    Show a newline-separated list of all the workshops.\n  expressworks select NAME\n    Select a workshop.\n  expressworks current\n    Show the currently selected workshop.\n  expressworks run program.js\n    Run your program against the selected input.\n  expressworks verify program.js\n    Verify your program against the expected output.\n```\n\n# Reset\n\nIf you want to reset the list of completed tasks, clean the `~/.config/expressworks/completed.json` file.\n\n![Hello World Express.js app](https://raw.github.com/azat-co/expressworks/master/images/finished.png)\n\n# More Information\n\nCheck out [Express.js Guide](http://expressjsguide.com).\n\n# Steps\n\n\n## Hello World\n\nCreate an Express.js app that runs on localhost:3000, and outputs \"Hello World!\" when somebody goes to root '/home'.\n\n`process.argv[2]` will be provided by expressworks to you, this is the port number.\n\n## Jade\n\nCreate an Express.js app with a home page (/home) rendered by jade template engine, that shows current date (toDateString).\n\n\n## Good Old Form\n\nWrite a route ('/form') that processes HTML form input (<form><imput name=\"str\"/></form>) and prints backwards the str value.\n\n## Static\n\nApply static middleware to server index.html file without any routes. The index.html file is provided and usable via `process.argv[3]` value of the path to it. However, you can use you're own file with this content:\n\n```html\n  <html>\n    <head>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"/main.css\"/>\n    </head>\n    <body>\n      <p>I am red!</p>\n    </body>\n  </html>\n```\n\n## Stylish CSS\n\nStyle your HTML from previous example with some Stylus middleware. The path to main.styl file is provided in `process.argv[3]` or you can create your own file/folder from these:\n\n```css\n  p\n    color red\n```\n\nThe index.html file:\n\n```html\n  <html>\n    <head>\n      <title>expressworks</title>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"/main.css\"/>\n    </head>\n    <body>\n      <p>I am red!</p>\n    </body>\n  </html>\n```\n\n## Param Pam Pam \n\nCreate an Express.js server that processes PUT `/message/:id` requests, e.g., PUT `/message/526aa677a8ceb64569c9d4fb`.\n\nAs the response of this request return id SHA1 hashed with a date:\n\n```javascript\n  require('crypto')\n    .createHash('sha1')\n    .update(new Date().toDateString().toString() + id)\n    .digest('hex')\n```\n\n## What's in Query\n\nWrite a route that extracts data from query string in the GET `/search` URL route, e.g., `?results=recent&include_tabs=true`, and then transforms outputs it back to the user in JSON format.\n\n## JSON Me\n\nWrite a server that reads a file (file name is passed in `process.argv[3]`), parses it to JSON and outputs the content to the user with `res.json(object)`.\n\n","readmeFilename":"README.md","_id":"expressworks@0.0.13","dist":{"shasum":"19f48c85bda8b96f5ae9f151199051473ebc31ca","tarball":"http://registry.npmjs.org/expressworks/-/expressworks-0.0.13.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"azat","email":"hi@azat.co"},"maintainers":[{"name":"azat","email":"hi@azat.co"}],"directories":{},"_etag":"\"CV7WGKQ455BJLCYKY6C3GYTAT\""}