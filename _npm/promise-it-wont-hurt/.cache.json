{"_id":"promise-it-wont-hurt","_rev":"25-3040d910c817e676fa792a0c0a689799","name":"promise-it-wont-hurt","description":"This is a Workshop module for learning about promises in node.js","dist-tags":{"latest":"0.1.0"},"versions":{"0.0.1":{"name":"promise-it-wont-hurt","version":"0.0.1","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7"},"readme":"ERROR: No README.md file found!","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.1","dist":{"shasum":"c2cb52d20e9ad485541e0cb509a681fa58cfedb4","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.1.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.2":{"name":"promise-it-wont-hurt","version":"0.0.2","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asyncronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asyncronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asyncronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\n```\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.2","dist":{"shasum":"8581a7676617298a9c921d47413b77b9742adba3","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.3":{"name":"promise-it-wont-hurt","version":"0.0.3","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asyncronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asyncronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asyncronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.3","dist":{"shasum":"fec63b0dac1fee28ed99d51c6199f38777ae5977","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.3.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.4":{"name":"promise-it-wont-hurt","version":"0.0.4","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asyncronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asyncronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asyncronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.4","dist":{"shasum":"3f96eee637e3e8413f24c883521f9d82aaf301b0","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.4.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.5":{"name":"promise-it-wont-hurt","version":"0.0.5","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asyncronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asyncronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asyncronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.5","dist":{"shasum":"94e1adaf20874c3e0d7618bcd028d3198c302330","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.5.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.6":{"name":"promise-it-wont-hurt","version":"0.0.6","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asyncronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asyncronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asyncronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.6","dist":{"shasum":"495ebaed122fed08b7ee00b925757bcc8c6313dd","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.6.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.7":{"name":"promise-it-wont-hurt","version":"0.0.7","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asynchronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asynchronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asynchronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.7","dist":{"shasum":"9d9aeabfc2c8ab95f892566e525fa071d59440ec","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.7.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.8":{"name":"promise-it-wont-hurt","version":"0.0.8","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6","node-uuid":"~1.4.1","lodash":"~2.4.1"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asynchronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asynchronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asynchronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n![Promise it won't hurt](https://raw.github.com/stevekane/promise-it-wont-hurt/master/promiseitwonthurt.png)\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.8","dist":{"shasum":"6cd692fca53e5abee7459ebb712e272024d8e980","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.8.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.9":{"name":"promise-it-wont-hurt","version":"0.0.9","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6","node-uuid":"~1.4.1","lodash":"~2.4.1"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asynchronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asynchronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asynchronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n![Promise it won't hurt](https://raw.github.com/stevekane/promise-it-wont-hurt/master/promiseitwonthurt.png)\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.9","dist":{"shasum":"ef9c2acdacca2240ba24d5b6f5bfee7cd7c9ffb9","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.9.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.10":{"name":"promise-it-wont-hurt","version":"0.0.10","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6","node-uuid":"~1.4.1","lodash":"~2.4.1"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asynchronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asynchronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asynchronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n![Promise it won't hurt](https://raw.github.com/stevekane/promise-it-wont-hurt/master/promiseitwonthurt.png)\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.10","dist":{"shasum":"60d75eedb66007e977d7e5bf66c26b5c27776d97","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.10.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.0.11":{"name":"promise-it-wont-hurt","version":"0.0.11","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6","node-uuid":"~1.4.1","lodash":"~2.4.1"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asynchronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asynchronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asynchronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n![Promise it won't hurt](https://raw.github.com/stevekane/promise-it-wont-hurt/master/promiseitwonthurt.png)\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.0.11","dist":{"shasum":"cb44e75c5e3733bc9b507cb38607a80961920816","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.0.11.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}},"0.1.0":{"name":"promise-it-wont-hurt","version":"0.1.0","description":"This is a Workshop module for learning about promises in node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"keywords":["nodeschool","promises"],"author":{"name":"Steven Kane"},"license":"BSD","bin":{"promise-it-wont-hurt":"./promise.js"},"preferGlobal":true,"dependencies":{"workshopper":"~0.4.1","q":"~0.9.7","q-io":"~1.10.6","node-uuid":"~1.4.1","lodash":"~2.4.1"},"readme":"# Promises Workshop for Javascript!\n\n### Learn to wield promises like a master to write clean asynchronous code\n\n#### Uses the popular \"Q\" library as a default implementation of Promises/A+\n\n## Mission\n\nPromises offer a very powerful abstraction for obtaining values asynchronously.  \nAs javascript is a async-first language it is important to understand the options\nyou have for handling asynchronicity.  \n\nYou will learn the ins and outs of promises including error handling, value propagation,\nsynchronous returns, and composition.\n\nBy the end of the workshop you will be comfortable using Q to work with promises\nAND writing your own functions that leverage promises to provide clean abstractions\nand error handling.\n\n## Installation & Update\n\nCreate a new directory to do your workshop work in.  Let's call it \"promise-shop\".\nYou will need to initialize npm in this repo and then use npm to install \"q\".\n\n```\n$ mkdir promise-shop && cd promise-shop\n$ npm init\n$ npm install q\n$ npm install -g promise-it-wont-hurt@latest\n```\n\n**Note**: the workshop is being updated weekly. \nPlease regularly rerun the above command to get the latest set of exercises.\n\n## Usage Instructions\n\n#### 1. Selecting a problem to work on\n\nOnce the workshop is installed, run `promise-it-wont-hurt` to print a menu\nwhere you can select a problem to work on.\n\n```\n$ promise-it-wont-hurt\n```\n\nProblems are listed in rough order of difficulty. You are advised to complete them in order, as later problems\nwill build on skills developed by solving previous problems.\n\n#### 2. Writing your solution\n\nOnce you have selected a problem, the workshop will remember which problem you are working on. \nUsing your preferred editor, simply create a file to write your solution in.\n\n#### 3. Testing your solution\n\nUse the workshop's `run` command to point the workshop at your solution file. Your solution will loaded \nand passed the problem input. This usually won't perform any validation, it will only show the program output.\n\n```\n$ promise-it-wont-hurt run mysolution.js\n```\n \n#### 4. Verifying your solution\n\nYour solution will be verified against the output of the 'official' solution. \nIf all of the output matches, then you have successfully solved the problem!\n\n```\n$ promise-it-wont-hurt verify mysolution.js\n```\n\n## Stuck?\n\nFeedback and critisism is welcome, please log your troubles in [issues](https://github.com/stevekane/promise-it-wont-hurt/issues). \n\n## Screenshots\n![Promise it won't hurt](https://raw.github.com/stevekane/promise-it-wont-hurt/master/promiseitwonthurt.png)\n\n## Resources\n\n## Thanks rvagg\n\nThis tutorial was built using rvagg's [workshopper](https://github.com/rvagg/workshopper) framework.\n\n## Licence\n\nMIT\n","readmeFilename":"README.md","_id":"promise-it-wont-hurt@0.1.0","dist":{"shasum":"cbde4d1afe2f4fe8da55f93dea7e5a8c677d0711","tarball":"http://registry.npmjs.org/promise-it-wont-hurt/-/promise-it-wont-hurt-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"skane","email":"kanesteven@gmail.com"},"maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"directories":{}}},"readme":"ERROR: No README.md file found!","maintainers":[{"name":"skane","email":"kanesteven@gmail.com"}],"time":{"modified":"2013-12-19T19:31:17.824Z","created":"2013-12-04T22:24:13.082Z","0.0.1":"2013-12-04T22:24:14.646Z","0.0.2":"2013-12-04T22:41:49.754Z","0.0.3":"2013-12-05T03:12:52.213Z","0.0.4":"2013-12-05T03:53:00.409Z","0.0.5":"2013-12-05T08:32:37.413Z","0.0.6":"2013-12-05T08:47:08.835Z","0.0.7":"2013-12-06T18:02:51.512Z","0.0.8":"2013-12-07T06:30:31.079Z","0.0.9":"2013-12-07T06:38:24.319Z","0.0.10":"2013-12-10T03:00:10.059Z","0.0.11":"2013-12-12T21:51:23.437Z","0.1.0":"2013-12-19T19:31:17.824Z"},"author":{"name":"Steven Kane"},"repository":{"type":"git","url":"git@github.com:stevekane/promise-it-wont-hurt.git"},"_attachments":{},"_etag":"\"6IH0R831SIX6G2GPXU2PJGFF9\""}