{"_id":"prr","_rev":"3-681db144d262269090ee04639fcecbe8","name":"prr","description":"A better Object.defineProperty()","dist-tags":{"latest":"0.0.0"},"versions":{"0.0.0":{"name":"prr","description":"A better Object.defineProperty()","version":"0.0.0","homepage":"https://github.com/rvagg/prr","authors":["Rod Vagg <rod@vagg.org> (https://github.com/rvagg)"],"keywords":["property","properties","defineProperty","ender"],"main":"./prr.js","repository":{"type":"git","url":"https://github.com/rvagg/prr.git"},"dependencies":{},"devDependencies":{"tap":"*"},"scripts":{"test":"node ./test.js"},"license":"MIT","readme":"# prr [![Build Status](https://secure.travis-ci.org/rvagg/prr.png)](http://travis-ci.org/rvagg/prr)\n\nAn sensible alternative to `Object.defineProperty()`. Available in npm and Ender as **prr**.\n\n## Usage\n\nSet the property `'foo'` (`obj.foo`) to have the value `'bar'` with default options (*enumerable, configurable and writable are all false*):\n\n```js\nprr(obj, 'foo', 'bar')\n```\n\nAdjust the default options:\n\n```js\nprr(obj, 'foo', 'bar', { enumerable: true, writable: true })\n```\n\nDo the same operation for multiple properties:\n\n```js\nprr(obj, { one: 'one', two: 'two' })\n// or with options:\nprr(obj, { one: 'one', two: 'two' }, { enumerable: true, writable: true })\n```\n\nBut obviously, having to write out the full options object makes it nearly as bad as the original `Object.defineProperty()` so we can **simplify**.\n\nAs an alternative method we can use an options string where each character represents a option: `'e'=='enumerable'`, `'c'=='configurable'` and `'w'=='writable'`:\n\n```js\nprr(obj, 'foo', 'bar', 'ew') // enumerable and writable but not configurable\n// muliple properties:\nprr(obj, { one: 'one', two: 'two' }, 'ewc') // configurable too\n```\n\n## Where can I use it?\n\nAnywhere! For pre-ES5 environments *prr* will simply fall-back to an `object[property] = value` so you can get close to what you want.\n\n*prr* is Ender-compatible so you can include it in your Ender build and `$.prr(...)` or `var prr = require('prr'); prr(...)`.\n\n## Licence\n\nprr is Copyright (c) 2013 Rod Vagg [@rvagg](https://twitter.com/rvagg) and licensed under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.","readmeFilename":"README.md","_id":"prr@0.0.0","dist":{"shasum":"1a84b85908325501411853d0081ee3fa86e2926a","tarball":"http://registry.npmjs.org/prr/-/prr-0.0.0.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"rvagg","email":"rod@vagg.org"},"maintainers":[{"name":"rvagg","email":"rod@vagg.org"}],"directories":{}}},"readme":"# prr [![Build Status](https://secure.travis-ci.org/rvagg/prr.png)](http://travis-ci.org/rvagg/prr)\n\nAn sensible alternative to `Object.defineProperty()`. Available in npm and Ender as **prr**.\n\n## Usage\n\nSet the property `'foo'` (`obj.foo`) to have the value `'bar'` with default options (*enumerable, configurable and writable are all false*):\n\n```js\nprr(obj, 'foo', 'bar')\n```\n\nAdjust the default options:\n\n```js\nprr(obj, 'foo', 'bar', { enumerable: true, writable: true })\n```\n\nDo the same operation for multiple properties:\n\n```js\nprr(obj, { one: 'one', two: 'two' })\n// or with options:\nprr(obj, { one: 'one', two: 'two' }, { enumerable: true, writable: true })\n```\n\nBut obviously, having to write out the full options object makes it nearly as bad as the original `Object.defineProperty()` so we can **simplify**.\n\nAs an alternative method we can use an options string where each character represents a option: `'e'=='enumerable'`, `'c'=='configurable'` and `'w'=='writable'`:\n\n```js\nprr(obj, 'foo', 'bar', 'ew') // enumerable and writable but not configurable\n// muliple properties:\nprr(obj, { one: 'one', two: 'two' }, 'ewc') // configurable too\n```\n\n## Where can I use it?\n\nAnywhere! For pre-ES5 environments *prr* will simply fall-back to an `object[property] = value` so you can get close to what you want.\n\n*prr* is Ender-compatible so you can include it in your Ender build and `$.prr(...)` or `var prr = require('prr'); prr(...)`.\n\n## Licence\n\nprr is Copyright (c) 2013 Rod Vagg [@rvagg](https://twitter.com/rvagg) and licensed under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.","maintainers":[{"name":"rvagg","email":"rod@vagg.org"}],"time":{"modified":"2013-04-01T17:21:30.886Z","created":"2013-04-01T17:21:27.562Z","0.0.0":"2013-04-01T17:21:30.886Z"},"repository":{"type":"git","url":"https://github.com/rvagg/prr.git"},"_attachments":{},"_etag":"\"64W1FCMGSRV9HHYBLZS7G0DN1\""}